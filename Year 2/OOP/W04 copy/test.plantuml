@startuml Hello world

skinparam classAttributeIconSize 0

class Employee{
    -name: string
    -yearIn: int
    -baseSalary: float
    +Employee()

    +Employee(string)
    +Employee(string, int)
    +Employee(string, int, float)
    +Employee(const Employee& p)
    +~Employee()

    +setBaseSalary(float): void
    +getBaseSalary(): float
    +calculateBaseSalary(): float
    +getName(): virtual string 

    +operator<<(ostream&, const Employee& e): friend ostream& 
}

Employee <|-- Employee_production

class Employee_production{
    -employee: Employee
    -numberOfProduct: int
    -v = 2000: int
    -salary: float

    +Employee_production()
    +Employee_production(Employee)
    +Employee_production(Employee, float)
    +Employee_production(Employee, int)
    +Employee_production(const Employee_production &p)
    +~Employee_production()

    +setSalary(int, float, float): void
    +getSalary(): float
    +calculateSalary(): float

    +operator<<(ostream&, const Employee_production& e): friend ostream& 
    +getName(): string    
}

Employee <|-- Employee_management

class Employee_management{

    -employee: Employee 
    -level: int
    -bonus: float
    -salary: float

    +Employee_management()
    +Employee_management(Employee, int)
    +Employee_management(Employee, int, float)
    +Employee_management(Employee, int, float, float)
    +Employee_management(const Employee_management &p)
    +~Employee_management()

    +setSalary(int, float, float, float): void
    +getSalary(): float
    +calculateSalary(): float

    +operator<<(ostream&, const Employee_management& e): friend ostream&
    +string getName(){    
}

Employee <|-- Employee_office

class Employee_office{
    -employee: Employee
    -workDays: int
    -allowance: float
    -v = 100000: int
    salary: float

    +Employee_office()
    +Employee_office(Employee, int)
    +Employee_office(Employee, int, float)
    +Employee_office(Employee, int, float, float)
    +Employee_office(const Employee_office &p)
    +~Employee_office()

    +setSalary(int, float, float): void
    +getSalary(): float
    +calculateSalary(): float

    +operator<<(ostream&, const Employee_office& e): friend ostream&
    +getName(): string
}

Employee_management <|-- Company
Employee_office <|-- Company
Employee_production <|-- Company

class Company{
    -companyName: string
    -listEmployeeManagement: vector<Employee_management>
    -listEmployeeOffice: vector<Employee_office>
    -listEmployeeProduction: vector<Employee_production>

    +Company()
    +Company(string name)
    +~Company()

    +addEmployeeManagement(Employee_management): void
    +addEmployeeManagement(vector<Employee_management>): void

    +addEmployeeOffice(Employee_office): void
    +addEmployeeOffice(vector<Employee_office>): void

    +addEmployeeProduction(Employee_production): void
    +addEmployeeProduction(vector<Employee_production>): void

    +printListEmployeeManagement(): void
    +printListEmployeeOffice(): void
    +printListEmployeeProduction(): void

    +totalSalary(): float

    +findEmployee(const string): bool 
    +testGetName(): void
}


@enduml